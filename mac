#!/usr/bin/env sh
#
# Laptop by thoughtbot
#
###
set -e

# UI
################################################################################
info() {
  local fmt="$1"; shift
  printf ":: $fmt\n" "$@"
}

error() {
  local fmt="$1"; shift
  printf "ERROR: $fmt\n" "$@"
}

# Support
################################################################################
die() { error "$@"; exit 1; }

write_to_file() {
  local file="$1"; shift

  printf "%s\n" "$@" >> "$file"
}

run_step() {
  local function="$1" description="$2"; shift 2

  info "%s..." "$description"
  $function "$@" || die "Failure in %s" "$function"
}

# Shared commands
################################################################################
set_shell() {
  chsh -s $(which zsh)
}

install_ruby() {
  rbenv install "$ruby_version"
  rbenv global "$ruby_version"
  rbenv rehash
}

install_gems() {
  gem update --system
  gem install bundler --no-document --pre
  gem install rails --no-document
}

install_hub() {
  if [ ! -d "$local_bin" ]; then
    mkdir "$local_bin"
  fi

  if ! echo ":${PATH}:" | grep -Fq ":${local_bin}:"; then
    write_to_file ~/.zshrc "export PATH=\"${local_bin}:\$PATH\""
    export PATH="${local_bin}:$PATH"
  fi

  curl http://hub.github.com/standalone -sLo "$local_bin"/hub
  chmod +x "$local_bin"/hub
}

configure_bundler() {
  bundle config --global jobs $((number_of_cores - 1))
}

install_heroku_config() {
  heroku plugins:install git://github.com/ddollar/heroku-config.git
}

# OS-specific commands
################################################################################
install() { brew install "$@"; }

supported() { return 0; }

update() {
  if ! which brew &>/dev/null; then
    curl -fsS https://raw.github.com/Homebrew/homebrew/go/install | ruby
    brew update

    if ! grep -Fsq 'recommended by brew doctor' ~/.zshrc; then
      write_to_file ~/.zshrc \
        '' \
        '# recommended by brew doctor' \
        'export PATH="/usr/local/bin:$PATH"' \
        ''
    fi

    export PATH="/usr/local/bin:$PATH"
  fi
}

setup() {
  if [[ -f /etc/zshenv ]]; then
    sudo mv /etc/{zshenv,zshrc}
  fi
}

install_postgresql() {
  install postgres --no-python
}

install_system_packages() {
  install \
    ctags \
    imagemagick \
    qt \
    reattach-to-user-namespace \
    redis \
    tmux \
    vim \
    watch
}

install_silversearcher() {
  install the_silver_searcher
}

install_ruby_prerequisites() {
  brew tap homebrew/dupes
  install apple-gcc42
  install openssl

  export CC=gcc-4.2
}

install_rbenv() {
  install rbenv

  if ! grep -Fsq 'rbenv init' ~/.zshrc; then
    write_to_file ~/.zshrc 'eval "$(rbenv init - --no-rehash)"'
    eval "$(rbenv init - --no-rehash)"
  fi
}

install_ruby_build() {
  install ruby-build
}

install_gem_rehash() {
  install rbenv-gem-rehash
}

install_heroku_toolbelt() {
  install heroku-toolbelt
}

install_rcm() {
  brew tap thoughtbot/rcm
  install rcm
}

number_of_cores=$(sysctl -n hw.ncpu)
local_bin="$HOME/.bin"
ruby_version="${RUBY_VERSION:-2.1.0}"

# Shared Installation steps
################################################################################
supported || die 'Your OS is not supported by laptop'

run_step update 'Updating the system'
run_step setup 'Preparing the system'
run_step install_system_packages 'Installing useful system packages'
run_step install_silversearcher 'Installing The Silver Searcher (better than ack or grep) to search the contents of files'
run_step install_postgresql 'Installing Postgres, a good open source relational database'
run_step install_rbenv 'Installing rbenv, to change Ruby versions'
run_step install_gem_rehash 'Installing rbenv-gem-rehash so the shell automatically picks up binaries after installing gems with binaries'
run_step install_ruby_build 'Installing ruby-build, to install Rubies'
run_step install_ruby_prerequisites 'Installing Ruby dependencies'
run_step install_ruby "Installing Ruby $ruby_version and setting as global"
run_step install_gems 'Installing Bundler and Rails'
run_step configure_bundler 'Configuring Bundler for faster, parallel gem installation'
run_step install_hub 'Installing GitHub CLI client'
run_step install_heroku_toolbelt 'Installing Heroku CLI client'
run_step install_heroku_config 'Installing the heroku-config plugin to pull config variables locally to be used as ENV variables'
run_step install_rcm 'Installing rcm, to manage your dotfiles'
run_step set_shell 'Setting ZSH as your login shell'

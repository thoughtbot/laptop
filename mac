#!/usr/bin/env bash
### end common-components/bash-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

if [[ ! -d "$HOME/.bin/" ]]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch $HOME/.zshrc
fi

if [[ ":$PATH:" != *":$HOME/.bin:"* ]]; then
  printf 'export PATH="$HOME/.bin:$PATH"\n' >> ~/.zshrc
  export PATH="$HOME/.bin:$PATH"
fi
### end common-components/check-home-bin

fancy_echo() {
  printf "\n%b\n" "$1"
}

brew_install() {
  brew install $1 || brew upgrade $1
}
### end common-components/shared-functions

if [ ! -e ~/.aliases ]; then
  fancy_echo 'Adding aliases'

  echo """
alias gb='git branch'
alias gc='git checkout'
alias gm='git commit -m'
alias gma='git commit -a -m'
alias ga='git add'
alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias grm='git rm'
alias gpush='git push'
alias gpull='git pull'
alias add='git add'
alias push='git push'
alias pull='git pull'
alias status='git status'

alias ls='ls -la'

""" > ~/.aliases

  echo """
source .aliases
source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash
source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh
PS1='[$(date +%H:%M) \[\033[0;36m\]\u \[\033[0;33m\]\w \[\033[0;31m\]$(__git_ps1 "(%s)")\[\033[0m\]]\$ '
""" >> ~/.bash_profile

else
  fancy_echo 'Aliases already exist'
fi
### end common-components/aliases

if [ -f /Applications/Xcode.app ]; then
  fancy_echo "XCode is required"
  fancy_echo "You will also need to run xcode-select --install"
  
  fancy_echo https://itunes.apple.com/us/app/xcode/id497799835?mt=12
  exit 1
fi
### end mac-components/check-xcode

fancy_echo "Checking SSH Keys"
if [ ! -e ~/.ssh/id_rsa ]; then
  fancy_echo "Run the following:"
  echo "ssh-keygen -t rsa -b 4096 -C 'jkamenik@lgscout.com'"
  exit 1
fi
### end common-components/ssh-key

if ! command -v brew &>/dev/null; then
  fancy_echo "Installing Homebrew, a good OS X package manager ..."
    ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
    
  if ! grep -qs "recommended by brew doctor" ~/.zshrc; then
    fancy_echo "Put Homebrew location earlier in PATH ..."
      printf '\n# recommended by brew doctor\n' >> ~/.zshrc
      printf 'export PATH="/usr/local/bin:$PATH"\n' >> ~/.zshrc
      export PATH="/usr/local/bin:$PATH"
  fi
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update
### end mac-components/homebrew

fancy_echo "Installing Git, for source control..."
  brew_install 'git'
  brew_install 'git-sh'

fancy_echo "Installing Postgres, a good open source relational database ..."
  brew_install 'postgres --no-python'

fancy_echo "Installing Redis, a good key-value database ..."
  brew_install 'redis'

fancy_echo "Installing The Silver Searcher (better than ack or grep) to search the contents of files ..."
  brew_install 'the_silver_searcher'

fancy_echo "Installing vim from Homebrew to get the latest version ..."
  brew_install 'vim'

fancy_echo "Installing ctags, to index files for vim tab completion of methods, classes, variables ..."
  brew_install 'ctags'

fancy_echo "Installing tmux, to save project state and switch between projects ..."
  brew_install 'tmux'

fancy_echo "Installing reattach-to-user-namespace, for copy-paste and RubyMotion compatibility with tmux ..."
  brew_install 'reattach-to-user-namespace'

fancy_echo "Installing ImageMagick, to crop and resize images ..."
  brew_install 'imagemagick'

fancy_echo "Installing QT, used by Capybara Webkit for headless Javascript integration testing ..."
  brew_install 'qt'

fancy_echo "Installing watch, to execute a program periodically and show the output ..."
  brew_install 'watch'

fancy_echo "Installing Curl, a downloader..."
  brew_install 'curl'

fancy_echo "Installing GLib, a library..."
  brew_install 'glib'

fancy_echo "Installing LibYAML..."
  brew_install 'libyaml'

fancy_echo "Installing Check..."
  brew_install 'check'

fancy_echo "Installing RabbitMQ, a message queue..."
  brew_install 'rabbitmq-c'

fancy_echo "Installing Go..."
  brew_install 'go'
### end mac-components/packages

fancy_echo "Installing git aliases..."
  git config --global alias.ci commit
  git config --global alias.br branch
  git config --global alias.st status
  git config --global alias.conflicted '!'"git status | grep 'both modified' | awk '{print \$3}' | xargs $EDITOR"
### end common-components/git-aliases

fancy_echo "Starting Postgres ..."
  # subscript this so the failure is ignored
  (brew services start postgres)

fancy_echo "Starting Redis ..."
  (brew services start redis)
### end mac-components/start-services

fancy_echo "Upgrading and linking OpenSSL ..."
  brew install openssl
  brew link openssl --force
### end mac-components/compiler-and-libraries

fancy_echo "Installing rvm, to change Ruby versions ..."
  curl -sSL https://get.rvm.io | bash -s stable
  rvm reload

fancy_echo "Installing a default ruby..."
  rvm install 2.1
  rvm use 2.1 --default
### end common-components/rvm

fancy_echo "Installing bundler"
  gem install bundler

fancy_echo "Configuring Bundler for faster, parallel gem installation ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))
### end mac-components/bundler

### end common-components/default-gems

fancy_echo "Installing GitHub CLI client ..."
  brew install hub
### end mac-components/github

fancy_echo "Installing your personal additions from ~/.laptop.local ..."
  if [[ -f ~/.laptop.local ]]; then
    source ~/.laptop.local
  fi
### end common-components/personal-additions

fancy_echo "Creating Database"
  (createdb fusebox)

fancy_echo "Creating user"
  (createuser -e -s fuse_fuse)
  (createuser -e -s postgres)
### end common-components/lg-db-setup

fancy_echo "Installation Complete"
echo "###########################"
echo
echo "Global Wiki"
echo https://github.com/Lookingglass/scoutvision/wiki
echo
echo "Setup your editor"
echo https://github.com/Lookingglass/scoutvision/wiki/Trailing%20White%20Space%20Must%20Die
### end common-components/important-links


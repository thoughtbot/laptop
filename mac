#!/bin/sh
### end common-components/sh-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

if [ ! -d "/usr/local/bin/" ]; then
  sudo mkdir -p "/usr/local/bin"
fi
### end common-components/check-usr-local-bin

fancy_echo() {
  printf "\n%b\n" "$1"
}
### end common-components/shared-functions

if ! which -s brew; then
  fancy_echo "Installing Homebrew, a good OS X package manager ..."
    ruby <(curl -fsS https://raw.github.com/mxcl/homebrew/go/install)
    brew update

  if ! grep -qs "recommended by brew doctor" ~/.bashrc; then
    fancy_echo "Put Homebrew location earlier in PATH ..."
      echo -e "\n# recommended by brew doctor" >> ~/.bashrc
      echo -e "export PATH='/usr/local/bin:$PATH'\n" >> ~/.bashrc
      source ~/.bashrc
  fi
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi
### end mac-components/homebrew-with-bash

if ! which -s psql; then
  fancy_echo "Installing Postgres, a good open source relational database ..."
    brew install postgres --no-python
    initdb /usr/local/var/postgres -E utf8
    fancy_echo "Launch Postgres with system start..."
      ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents
      launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
fi

if ! which -s mysql; then
  fancy_echo "Installing MySQL, another good open source relational database ..."
    brew install mysql
    fancy_echo "Launch MySQL with system start..."
      ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents
      launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
fi

fancy_echo "Installing Redis, a good key-value database ..."
  brew install redis

fancy_echo "Installing The Silver Searcher (better than ack or grep) to search the contents of files ..."
  brew install the_silver_searcher

fancy_echo "Installing vim from Homebrew to get the latest version ..."
  brew install vim

fancy_echo "Installing ctags, to index files for vim tab completion of methods, classes, variables ..."
  brew install ctags

fancy_echo "Installing tmux, to save project state and switch between projects ..."
  brew install tmux

fancy_echo "Installing reattach-to-user-namespace, for copy-paste and RubyMotion compatibility with tmux ..."
  brew install reattach-to-user-namespace

fancy_echo "Installing ImageMagick, to crop and resize images ..."
  brew install imagemagick

fancy_echo "Installing QT, used by Capybara Webkit for headless Javascript integration testing ..."
  brew install qt --HEAD

fancy_echo "Installing watch, to execute a program periodically and show the output ..."
  brew install watch
### end mac-components/packages

if ! which -s rvm; then
  fancy_echo "Installing RVM, to change Ruby versions ..."
    \curl -L https://get.rvm.io | bash -s stable

    if ! grep -qs "Load RVM with bash login" ~/.bash_profile; then
      fancy_echo "Put RVM related path in bash_profile"
        echo -e "\n# Load RVM with bash login" >> ~/.bash_profile
        echo 'if [[ -d $HOME/.rvm/bin ]]; then' >> ~/.bash_profile
        echo ' export PATH=$HOME/.rvm/bin:$PATH' >> ~/.bash_profile
        echo ' if [[ -n "$PS1" ]]; then' >> ~/.bash_profile
        echo '    export rvm_pretty_print_flag=1' >> ~/.bash_profile
        echo '    source $HOME/.rvm/scripts/rvm' >> ~/.bash_profile
        echo '    [[ -r $rvm_path/scripts/completion ]] && source $rvm_path/scripts/completion' >> ~/.bash_profile
        echo '  fi' >> ~/.bash_profile
        echo 'fi' >> ~/.bash_profile
        if ! grep -qs "Load bash_profile" ~/.bashrc; then
          echo -e "\n# Load bash_profile" >> ~/.bashrc
          echo '[[ -d $HOME/.bash_profile ]] && source $HOME/.bash_profile' >> ~/.bashrc
          if [[ -d $HOME/.profile ]]; then
            echo "source $HOME/.profile" >> ~/.bashrc
          fi
        fi
        source ~/.bashrc
    fi

    if type rvm | head -n 1 | grep -qs 'rvm is a function'; then
      echo 'RVM is installed successfully'
    fi
fi
### end mac-components/rvm

fancy_echo "Installing GNU Compiler Collection, a necessary prerequisite to installing Ruby ..."
  brew tap homebrew/dupes
  brew install apple-gcc42

fancy_echo "Upgrading and linking OpenSSL ..."
  brew install openssl

export CC=gcc-4.2
### end mac-components/compiler-and-libraries

fancy_echo "Preparing ruby environments"
  rvm requirements

fancy_echo "Installing Ruby 2.0.0-p247 ..."
  rvm install 2.0.0-p247

fancy_echo "Setting Ruby 2.0.0-p247 as global default Ruby ..."
  rvm use 2.0.0-p247 --default

fancy_echo "Installing critical Ruby gems for Rails development ..."
  gem install bundler pg rails unicorn --no-ri --no-doc

### end common-components/ruby-environment-with-rvm


#!/usr/bin/env zsh
CLEAR="\033[0m"
ORANGE="\033[33m"

successfully() {
  $* || (echo "\nfailed" 1>&2 && exit 1)
}

fancy_echo() {
  echo -e ${ORANGE}$1${CLEAR}
  echo
}


# Linux Specific

if lsb_release -c | grep -qEv 'precise|quantal|wheezy'
then
  fancy_echo "Sorry! we don't currently support that distro."
  exit 1;
fi

fancy_echo "Updating system packages ..."
  if command -v aptitude >/dev/null; then
    fancy_echo "Using aptitude ..."
  else
    fancy_echo "Installing aptitude ..."
    successfully sudo apt-get install -y aptitude
  fi
  successfully sudo aptitude update
  successfully sudo aptitude -y dist-upgrade

fancy_echo "Install curl for transferring data with URL syntax ..."
  successfully sudo aptitude install -y curl

fancy_echo "Install git, for source control management ..."
  successfully sudo aptitude install -y git

fancy_echo "Installing vim ..."
  successfully sudo aptitude install -y vim-gtk

fancy_echo "Installing base ruby build dependencies ..."
  successfully sudo aptitude build-dep -y ruby1.9.3


# Cross platform

fancy_echo "Install Postgres, a good open source relational database ..."
  successfully sudo aptitude install -y postgresql postgresql-server-dev-all

fancy_echo "Install Redis, a good key-value database ..."
  successfully sudo aptitude install -y redis-server

fancy_echo "Install The Silver Searcher (better than ack or grep) for searching the contents of files ..."
  successfully git clone git://github.com/ggreer/the_silver_searcher.git /tmp/the_silver_searcher
  successfully sudo aptitude install -y automake pkg-config libpcre3-dev zlib1g-dev
  successfully sh /tmp/the_silver_searcher/build.sh
  successfully cd /tmp/the_silver_searcher
  successfully sh build.sh
  successfully sudo make install
  successfully cd ~
  successfully rm -rf /tmp/the_silver_searcher

fancy_echo "Install ctags, for indexing files for vim tab completion of methods, classes, variables ..."
  successfully sudo aptitude install -y exuberant-ctags

fancy_echo "Install tmux, for saving project state and switching between projects ..."
  successfully sudo aptitude install -y tmux

fancy_echo "Install ImageMagick, for cropping and re-sizing images ..."
  successfully sudo aptitude install -y imagemagick

fancy_echo "Install QT, used by Capybara Webkit for headless Javascript integration testing ..."
  successfully sudo aptitude install -y libqtwebkit-dev

fancy_echo "Install watch, used to execute a program periodically and show the output ..."
  successfully sudo aptitude install -y watch

fancy_echo "Install rbenv for changing Ruby versions ..."
  successfully git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
  if ! grep -qs "PATH=.*rbenv" ~/.zshrc; then
    successfully echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.zshrc
  fi
  if ! grep -qs "SHELL=.*zsh" ~/.zshrc; then
    successfully echo "export SHELL=$(which zsh)" >> ~/.zshrc
  fi
  if ! grep -qs "rbenv init" ~/.zshrc; then
    successfully echo 'eval "$(rbenv init -)"' >> ~/.zshrc

    fancy_echo "Enable shims and autocompletion ..."
      successfully eval "$(rbenv init -)"
  fi

  source ~/.zshrc

fancy_echo "Install rbenv-gem-rehash so the shell automatically picks up binaries after installing gems with binaries..."
  successfully git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash

fancy_echo "Install ruby-build for installing Rubies ..."
  successfully git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build

fancy_echo "Install Ruby 1.9.3-p392 ..."
  successfully rbenv install 1.9.3-p392

fancy_echo "Set Ruby 1.9.3-p392 as global default Ruby ..."
  successfully rbenv global 1.9.3-p392
  successfully rbenv shell 1.9.3-p392

fancy_echo "Update to latest Rubygems version ..."
  successfully gem update --system

fancy_echo "Install critical Ruby gems for Rails development ..."
  successfully gem install bundler foreman pg rails thin --no-document

fancy_echo "Install GitHub CLI client ..."
  successfully gem install hub --no-document

fancy_echo "Install Heroku CLI client ..."
  successfully wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh

fancy_echo "Install the heroku-config plugin for pulling config variables locally to be used as ENV variables ..."
  successfully heroku plugins:install git://github.com/ddollar/heroku-config.git

if ! grep -qs "DO NOT EDIT BELOW THIS LINE" ~/.zshrc; then
  fancy_echo "Prepare ~/.zshrc for http://github.com/thoughtbot/dotfiles ..."
    successfully echo "# DO NOT EDIT BELOW THIS LINE\n" >> ~/.zshrc
fi
